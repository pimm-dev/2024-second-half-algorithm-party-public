<?xml version="1.0" encoding="utf-8" standalone="no"?>
<problem revision="15" short-name="pyramid-xor-game" url="https://polygon.codeforces.com/p8oF5SR/jh01533/pyramid-xor-game">
    <names>
        <name language="korean" value="피라미드 게임"/>
    </names>
    <statements>
        <statement charset="UTF-8" language="korean" mathjax="true" path="statements/korean/problem.tex" type="application/x-tex"/>
        <statement charset="UTF-8" language="korean" mathjax="true" path="statements/.html/korean/problem.html" type="text/html"/>
    </statements>
    <judging cpu-name="Intel(R) Core(TM) i3-8100 CPU @ 3.60GHz" cpu-speed="3600" input-file="" output-file="" run-count="1">
        <testset name="tests">
            <time-limit>1000</time-limit>
            <memory-limit>1073741824</memory-limit>
            <test-count>44</test-count>
            <input-path-pattern>tests/%02d</input-path-pattern>
            <answer-path-pattern>tests/%02d.a</answer-path-pattern>
            <tests>
                <test method="manual" sample="true"/>
                <test method="manual"/>
                <test cmd="SmallGenerator 5 1 1" method="generated"/>
                <test cmd="SmallGenerator 5 1 3" method="generated"/>
                <test cmd="SmallGenerator 5 2 1" method="generated"/>
                <test cmd="SmallGenerator 5 2 3" method="generated"/>
                <test cmd="SmallGenerator 5 3 1" method="generated"/>
                <test cmd="SmallGenerator 5 3 3" method="generated"/>
                <test cmd="SmallGenerator 5 4 1" method="generated"/>
                <test cmd="SmallGenerator 5 4 3" method="generated"/>
                <test cmd="SmallGenerator 5 5 1" method="generated"/>
                <test cmd="SmallGenerator 5 5 3" method="generated"/>
                <test cmd="SmallGenerator 4 1 7" method="generated"/>
                <test cmd="SmallGenerator 4 1 15" method="generated"/>
                <test cmd="SmallGenerator 4 2 7" method="generated"/>
                <test cmd="SmallGenerator 4 2 15" method="generated"/>
                <test cmd="SmallGenerator 4 3 7" method="generated"/>
                <test cmd="SmallGenerator 4 3 15" method="generated"/>
                <test cmd="SmallGenerator 4 4 7" method="generated"/>
                <test cmd="SmallGenerator 4 4 15" method="generated"/>
                <test cmd="SmallGenerator 3 1 1023" method="generated"/>
                <test cmd="SmallGenerator 3 2 1023" method="generated"/>
                <test cmd="SmallGenerator 3 3 1023" method="generated"/>
                <test cmd="OneCaseGenerator 1000 1000 1000000000 0 1" method="generated"/>
                <test cmd="OneCaseGenerator 1000 500 1000000000 50 1" method="generated"/>
                <test cmd="OneCaseGenerator 1000 500 1000000000 50000 1" method="generated"/>
                <test cmd="OneCaseGenerator 1000 500 1000000000 50 0" method="generated"/>
                <test cmd="OneCaseGenerator 1000 500 1000000000 50000 0" method="generated"/>
                <test cmd="OneCaseGenerator 1000 10 1000000000 50 1" method="generated"/>
                <test cmd="OneCaseGenerator 1000 10 1000000000 50000 1" method="generated"/>
                <test cmd="OneCaseGenerator 1000 10 1000000000 50 0" method="generated"/>
                <test cmd="OneCaseGenerator 1000 10 1000000000 50000 0" method="generated"/>
                <test cmd="MiddleGenerator 10 1000000000" method="generated"/>
                <test cmd="MiddleGenerator 100 1000000000" method="generated"/>
                <test cmd="MiddleGenerator 500 1000000000" method="generated"/>
                <test cmd="MiddleGenerator 72 1000000000" method="generated"/>
                <test cmd="MiddleGenerator 348 1000000000" method="generated"/>
                <test cmd="MiddleGenerator 52 1000000000" method="generated"/>
                <test cmd="MiddleGenerator 7 1000000000" method="generated"/>
                <test cmd="MiddleGenerator 10 15" method="generated"/>
                <test cmd="MiddleGenerator 100 31" method="generated"/>
                <test cmd="MiddleGenerator 43 1023" method="generated"/>
                <test cmd="MiddleGenerator 7 1023" method="generated"/>
                <test cmd="MiddleGenerator 6 7" method="generated"/>
            </tests>
        </testset>
    </judging>
    <files>
        <resources>
            <file path="files/olymp.sty"/>
            <file path="files/problem.tex"/>
            <file path="files/statements.ftl"/>
            <file path="files/testlib.h" type="h.g++"/>
        </resources>
        <executables>
            <executable>
                <source path="files/MiddleGenerator.cpp" type="cpp.gcc13-64-winlibs-g++20"/>
            </executable>
            <executable>
                <source path="files/OneCaseGenerator.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/SmallGenerator.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/Validator.cpp" type="cpp.g++17"/>
            </executable>
            <executable>
                <source path="files/gen_test.cpp" type="cpp.gcc14-64-msys2-g++23"/>
            </executable>
        </executables>
    </files>
    <assets>
        <checker name="std::lcmp.cpp" type="testlib">
            <source path="files/check.cpp" type="cpp.g++17"/>
            <copy path="check.cpp"/>
            <testset>
                <test-count>0</test-count>
                <input-path-pattern>files/tests/checker-tests/%02d</input-path-pattern>
                <output-path-pattern>files/tests/checker-tests/%02d.o</output-path-pattern>
                <answer-path-pattern>files/tests/checker-tests/%02d.a</answer-path-pattern>
                <tests/>
            </testset>
        </checker>
        <validators>
            <validator>
                <source path="files/Validator.cpp" type="cpp.g++17"/>
                <testset>
                    <test-count>0</test-count>
                    <input-path-pattern>files/tests/validator-tests/%02d</input-path-pattern>
                    <tests/>
                </testset>
            </validator>
        </validators>
        <solutions>
            <solution tag="accepted">
                <source path="solutions/ksoosung77-ac.cpp" type="cpp.gcc14-64-msys2-g++23"/>
            </solution>
            <solution tag="time-limit-exceeded">
                <source path="solutions/ksoosung77-test.cpp" type="cpp.gcc14-64-msys2-g++23"/>
            </solution>
            <solution tag="main">
                <source path="solutions/main_solution.cpp" type="cpp.g++17"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/mz_sol1.cpp" type="cpp.g++17"/>
            </solution>
        </solutions>
    </assets>
    <properties>
        <property name="tests-wellformed" value="true"/>
    </properties>
    <stresses>
        <stress-count>6</stress-count>
        <stress-path-pattern>stresses/%03d</stress-path-pattern>
        <list>
            <stress index="7" path="stresses/007"/>
            <stress index="5" path="stresses/005"/>
            <stress index="4" path="stresses/004"/>
            <stress index="3" path="stresses/003"/>
            <stress index="2" path="stresses/002"/>
            <stress index="1" path="stresses/001"/>
        </list>
    </stresses>
    <tags>
        <tag value="game theory"/>
        <tag value="sprague-grundy"/>
    </tags>
</problem>
